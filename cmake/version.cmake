SET(${PROJECTNAME}_VERSION_MAJOR 0)
SET(${PROJECTNAME}_VERSION_MINOR 1)
SET(${PROJECTNAME}_VERSION_PATCH 5)

MATH(EXPR OFFICIAL "${${PROJECTNAME}_VERSION_PATCH} % 2")
IF(OFFICIAL EQUAL 0)
	SET(${PROJECTNAME}_VERSION_TWEAK 0)
ELSE()
	EXECUTE_PROCESS(
	  COMMAND git rev-list HEAD --count
	  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
	  OUTPUT_VARIABLE GIT_REV_COUNT
	  OUTPUT_STRIP_TRAILING_WHITESPACE
	  ERROR_QUIET
	)
	IF(GIT_REV_COUNT STREQUAL "")
		SET(${PROJECTNAME}_VERSION_TWEAK "unknown")
	ELSE()
		SET(${PROJECTNAME}_VERSION_TWEAK ${GIT_REV_COUNT})
	ENDIF()
ENDIF()

EXECUTE_PROCESS(
  COMMAND git diff --shortstat
  COMMAND tail -n1
  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
  OUTPUT_VARIABLE GIT_DIRTY
  OUTPUT_STRIP_TRAILING_WHITESPACE
  ERROR_QUIET
)

IF(GIT_DIRTY STREQUAL "")
	SET(${PROJECTNAME}_VERSION_DIRTY "")
ELSE()
	SET(${PROJECTNAME}_VERSION_DIRTY ".dirty")
ENDIF()

SET(${PROJECTNAME}_VERSION ${${PROJECTNAME}_VERSION_MAJOR}.${${PROJECTNAME}_VERSION_MINOR}.${${PROJECTNAME}_VERSION_PATCH}.${${PROJECTNAME}_VERSION_TWEAK}${${PROJECTNAME}_VERSION_DIRTY})

MESSAGE(STATUS "${PROJECT_NAME} version ${${PROJECTNAME}_VERSION}")


