FUNCTION(GENERATE_VERSION VERSION_FILE)
  
  MESSAGE( STATUS "CMAKE_SOURCE_DIR:         " ${CMAKE_SOURCE_DIR} )
  MESSAGE( STATUS "CMAKE_CURRENT_SOURCE_DIR: " ${CMAKE_CURRENT_SOURCE_DIR} )
  MESSAGE( STATUS "PROJECT_SOURCE_DIR: " ${PROJECT_SOURCE_DIR} )

  EXECUTE_PROCESS(
  	COMMAND cat ${PROJECT_SOURCE_DIR}/${VERSION_FILE}
  	COMMAND sed -n s/[[:space:]]*\#define[[:space:]]\\+CJET_PATCH[[:space:]]\\+\"\\\([[:digit:]]\\+\\\)\"/\\1/p
  	WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
  	OUTPUT_VARIABLE VERSION_PATCH
  	OUTPUT_STRIP_TRAILING_WHITESPACE
  )
  
  MATH(EXPR OFFICIAL "${VERSION_PATCH} % 2")
  IF(OFFICIAL EQUAL 0)
  	SET(${PROJECTNAME}_VERSION_TWEAK 0)
  ELSE()
  	EXECUTE_PROCESS(
  	  COMMAND git rev-list HEAD --count
  	  WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
  	  OUTPUT_VARIABLE GIT_REV_COUNT
  	  OUTPUT_STRIP_TRAILING_WHITESPACE
  	  ERROR_QUIET
  	)
  	IF(GIT_REV_COUNT STREQUAL "")
  		SET(${PROJECTNAME}_VERSION_TWEAK "unknown")
  	ELSE()
  		SET(${PROJECTNAME}_VERSION_TWEAK ${GIT_REV_COUNT})
  	ENDIF()
  ENDIF()
  
  EXECUTE_PROCESS(
    COMMAND git diff --shortstat
    COMMAND tail -n1
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
    OUTPUT_VARIABLE GIT_DIRTY
    OUTPUT_STRIP_TRAILING_WHITESPACE
    ERROR_QUIET
  )
  
  IF(GIT_DIRTY STREQUAL "")
  	SET(${PROJECTNAME}_VERSION_DIRTY "")
  ELSE()
  	SET(${PROJECTNAME}_VERSION_DIRTY ".dirty")
  ENDIF()
  
  SET(CJET_LAST ${${PROJECTNAME}_VERSION_TWEAK}${${PROJECTNAME}_VERSION_DIRTY} PARENT_SCOPE)

ENDFUNCTION(GENERATE_VERSION)

